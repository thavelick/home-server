---
- name: install navidrome prerequisites
  apt:
    name:
      - ffmpeg
- name: download navidrome release from github
  get_url:
    url: https://github.com/navidrome/navidrome/releases/download/v0.50.1/navidrome_0.50.1_linux_amd64.tar.gz
    dest: /tmp/navidrome.tar.gz
- name: make all the folders
  file:
    path: "{{item}}"
    state: directory
    owner: 'www-data'
    group: 'www-data'
  with_items:
    - "{{navidrome_site_root}}"
    - "{{navidrome_site_root}}/music"
    - "{{navidrome_site_root}}/bin"
    - "{{navidrome_site_root}}/conf"
- name: extract the navidrome release
  unarchive:
    dest: "{{navidrome_site_root}}/bin"
    src: /tmp/navidrome.tar.gz
    remote_src: true
    owner: 'www-data'
    group: 'www-data'
    mode: '0755'
    creates: "{{navidrome_site_root}}/bin/navidrome"
- name: create the config file
  template:
    src: templates/navidrome.toml.j2
    dest: "{{navidrome_site_root}}/conf/navidrome.toml"
    owner: 'www-data'
    group: 'www-data'
    mode: '0644'
- name: configure service
  include_role: {name: service_standard}
  vars: {service_name: navidrome}
- name: copy nginx site config
  template: src=templates/nginx.conf.j2 dest=/etc/nginx/sites-available/{{ navidrome_domain }}
  register: navidrome_nginx
- name: enable the nginx site config
  file:
    dest: /etc/nginx/sites-enabled/{{ navidrome_domain }}
    state: link
    src: /etc/nginx/sites-available/{{ navidrome_domain }}
- name: restart nginx
  when: navidrome_nginx.changed
  service:
    name: nginx
    state: restarted
